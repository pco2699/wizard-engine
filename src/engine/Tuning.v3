// Copyright 2022 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Contains flags that explicitly disable features to test their impact on performance.
// Generally, all of these settings should be {false} by default.
component FeatureDisable {
	// Wasm language/extension features
	var simd = false;
	var multiMemory = false;
	var complexBlockTypes = false;	// required for GC and function references

	// Engine features.
	var globalProbes = false;	// required for tracing/probing
	var localProbes = false;	// required for tracing/probing
	var frameAccess = false;	// required for debugging
	var frameUpdate = false;	// required for debugging
	var stacktraces = false;	// required for debugging
	var valueTags = false;		// required for proper GC
	var multiTier = false;		// for multi-tier execution
	var tierUpOsr = false;		// tier-up uses on-stack-replacement
}

// Tuning settings for the fast interpreter that have no effect on correctness.
component FastIntTuning {
	var threadedDispatch = true;	// inline dispatch at the end of every handler
	var handlerAlignment = 8;	// align handler code in memory
	var dispatchEntrySize = 4;	// size of each dispatch table entry
	var inlineAllLEBs = false;	// always inline LEB slow cases
	var entryTierUpDecrement = 1;	// "cost" of entering a function in the interpreter
	var loopTierUpDecrement = 1;	// "cost" of looping in the interpreter
}

// Tuning settings for the single-pass compiler that have no effect on correctness.
component SpcTuning {
	var trackFloatZeroConst = true;
	var trackFloat32Const = false;		// XXX: enable
	var directCalls = false;		// XXX: implement
	var lazySlotZeroing = false;		// XXX: implement
	var argsInRegs = false;			// XXX: implement
	var fastIntTierUpThreshold = 10;	// threshold at which int -> SPC tiering occurs
}
